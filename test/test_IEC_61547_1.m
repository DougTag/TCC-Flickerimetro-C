% Generated by Gemini, just for debugging waveforms
% plot_csv_data.m

% --- Configuration ---
filename = '../data/sinal_debug.csv'; % Name of your CSV file
time_column_name = 't'; % Name of the column containing time data
signal_column_name = 'sinal'; % Name of the column containing signal data

% --- 1. Read the CSV file ---
% Using readtable is generally recommended for CSV files with headers
% as it automatically detects column names and data types.
try
    dataTable = readtable(filename);
    disp(['Successfully read data from: ', filename]);
catch ME
    error(['Error reading CSV file: ', ME.message]);
end

% --- 2. Extract data from specific columns ---
% Access columns using dot notation with their names
try
    t = dataTable.(time_column_name);
    signal = dataTable.(signal_column_name);
    disp('Extracted time and signal data.');
catch ME
    error(['Error accessing columns. Check column names in CSV and script. ', ME.message]);
end

% --- 3. Create the plot ---
figure; % Creates a new figure window
plot(t, signal, '-', 'LineWidth', 1.5, 'MarkerSize', 4); % Plot with lines and circles

% --- 4. Customize the plot ---
xlabel('Time (s)'); % Label for the x-axis
ylabel('Signal Value'); % Label for the y-axis
title(['Signal vs. Time from ', filename]); % Title of the plot
grid on; % Add a grid to the plot

% Optional: Add a legend if you have multiple lines, or if you want to be explicit
% legend('My Signal', 'Location', 'best');

% Optional: Adjust axis limits if needed
ylim([0 3]); xlim([60 63])

disp('Plot created successfully.');

% --- End of script ---